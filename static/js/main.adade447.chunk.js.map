{"version":3,"sources":["addBookmark.js","rating.js","bookmark.js","bookmarkList.js","addButton.js","filter.js","bookmarkApp.js","App.js","serviceWorker.js","index.js"],"names":["AddBookmark","props","state","title","url","desc","rating","this","setState","e","preventDefault","bookmark","options","method","body","JSON","stringify","headers","fetch","then","res","ok","Error","json","data","description","handleAdd","catch","err","error","message","className","onSubmit","handleSubmit","htmlFor","type","name","required","id","placeholder","value","onChange","titleChanged","target","urlChanged","descriptionChanged","min","max","ratingChanged","onClick","showForm","Component","Rating","stars","map","_","i","key","Bookmark","handleSetActiveSection","index","href","rel","activeSectionIndex","React","defaultProps","sections","BookmarkList","sectionIndex","bind","bookmarks","filter","selectValue","AddButton","Filter","onSelectChange","BookmarkApp","console","log","currrentTarget","App","showAddForm","joined","concat","show","page","setShowAddForm","addBookmark","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2PAiIeA,G,wDA7Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,OAAQ,GANO,E,yDAUNH,GACXI,KAAKC,SAAS,CACZL,Y,iCAIOC,GACTG,KAAKC,SAAS,CACZJ,U,yCAIeC,GACjBE,KAAKC,SAAS,CACZH,W,oCAIUC,GACZC,KAAKC,SAAS,CACZF,a,mCAISG,GAAI,IAAD,OACdA,EAAEC,iBACF,IAAkB,EAAZC,EAA6C,CAACR,OAAlC,EAA8DI,KAAKL,OAAjEC,MAAuCC,IAAzC,EAASA,IAAqCC,KAA9C,EAAcA,KAAsCC,OAApD,EAAoBA,QAEhCM,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qBAIpBC,MATW,0DASAN,GACRO,MAAK,SAAAC,GACJ,IAAIA,EAAIC,GACN,MAAM,IAAIC,MAAM,gDAElB,OAAOF,EAAIG,UAEZJ,MAAK,SAAAK,GACJ,EAAKhB,SAAS,CACZL,MAAO,GACPC,IAAK,GACLqB,YAAa,GACbnB,OAAQ,IAEV,EAAKL,MAAMyB,UAAUf,MAEtBgB,OAAM,SAAAC,GACL,EAAKpB,SAAS,CACZqB,MAAOD,EAAIE,e,+BAKT,IAAD,OACDD,EAAQtB,KAAKL,MAAM2B,MACjB,yBAAKE,UAAU,SAASxB,KAAKL,MAAM2B,OACnC,GAER,OACE,yBAAKE,UAAU,eACb,4CACEF,EACF,0BAAME,UAAU,oBAAoBC,SAAU,SAAAvB,GAAC,OAAI,EAAKwB,aAAaxB,KACnE,2BAAOyB,QAAQ,SAAf,UACA,2BACEC,KAAK,OACLC,KAAK,QACLC,SAAS,OACTC,GAAG,QACHC,YAAY,QACZC,MAAOjC,KAAKL,MAAMC,MAClBsC,SAAU,SAAAhC,GAAC,OAAI,EAAKiC,aAAajC,EAAEkC,OAAOH,UAC5C,2BAAON,QAAQ,OAAf,QACA,2BACEC,KAAK,MACLC,KAAK,MACLE,GAAG,MACHC,YAAY,MACZC,MAAOjC,KAAKL,MAAME,IAClBqC,SAAU,SAAAhC,GAAC,OAAI,EAAKmC,WAAWnC,EAAEkC,OAAOH,UAC1C,2BAAON,QAAQ,eAAf,gBACA,8BACEG,SAAS,OACTD,KAAK,cACLE,GAAG,cACHC,YAAY,cACZC,MAAOjC,KAAKL,MAAMG,KAClBoC,SAAU,SAAAhC,GAAC,OAAI,EAAKoC,mBAAmBpC,EAAEkC,OAAOH,UAClD,2BAAON,QAAQ,UAAf,YACA,2BACEG,SAAS,OACTF,KAAK,SACLC,KAAK,SACLE,GAAG,SACHQ,IAAI,IACJC,IAAI,IACJP,MAAOjC,KAAKL,MAAMI,OAClBmC,SAAU,SAAAhC,GAAC,OAAI,EAAKuC,cAAcvC,EAAEkC,OAAOH,UAE7C,yBAAKT,UAAU,wBACb,4BAAQkB,QAAS,SAAAxC,GAAC,OAAI,EAAKR,MAAMiD,UAAS,KAA1C,UACA,4BAAQf,KAAK,UAAb,e,GAtHcgB,c,OCAX,SAASC,EAAOnD,GAC7B,IAAMoD,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GACpBC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAIvD,EAAMuC,MACrB,0BAAMiB,IAAKD,GAAX,UACA,0BAAMC,IAAKD,GAAX,aAEN,OACE,yBAAKzB,UAAU,UACZsB,G,ICPcK,E,uKAMP,IAAD,OACL,OACI,yBAAK3B,UAAU,YACX,yBAAKA,UAAU,gBAAgBkB,QAAS,kBAAM,EAAKhD,MAAM0D,uBAAuB,EAAK1D,MAAM2D,SACvF,yBAAK7B,UAAU,mBACX,uBACI8B,KAAMtD,KAAKN,MAAMG,IACjBuC,OAAO,SACPmB,IAAI,uBACHvD,KAAKN,MAAME,QAGpB,kBAACiD,EAAD,CAAQZ,MAAOjC,KAAKN,MAAMK,UAE9B,yBAAKyB,UAAU,yBACTxB,KAAKN,MAAM8D,qBAAuBxD,KAAKN,MAAM2D,OAAU,2BAAIrD,KAAKN,MAAMI,Y,GArBtD2D,IAAMb,WAAvBO,EAEVO,aAAe,CAClBC,SAAU,I,ICHGC,E,kDAKjB,WAAYlE,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJ6D,mBAAoB,MAGL,EAKnBJ,uBAAyB,SAACS,GACrB,EAAKlE,MAAM6D,qBAAuBK,EAAgB,EAAK5D,SAAS,CAAEuD,mBAAoB,OAAU,EAAKvD,SAAS,CAAEuD,mBAAoBK,KAJrI,EAAKT,uBAAyB,EAAKA,uBAAuBU,KAA5B,gBAFf,E,qDAST,IAAD,OACCC,EAAY/D,KACbN,MACAqE,UACAC,QAAO,SAAA5D,GAAQ,OAAIA,EAASL,QAAU,EAAKL,MAAMuE,eACjDlB,KAAI,SAAC3C,EAAU6C,GAAX,OAAiB,kBAAC,EAAD,iBAAc7C,EAAd,CACEiD,MAAOJ,EACPC,IAAKD,EACLG,uBAAwB,EAAKA,uBAC7BI,mBAAoB,EAAK7D,MAAM6D,yBAC3D,OACI,yBAAKhC,UAAU,gBACVuC,O,GA1ByBnB,aAgC1CgB,EAAaF,aAAe,CACxBK,UAAW,I,ICxBAG,E,uKATH,IAAD,OACP,OACE,yBAAK1C,UAAU,aAAakB,QAAS,SAAAxC,GAAC,OAAI,EAAKR,MAAMiD,UAAS,KAA9D,a,GAHkBC,aCmBTuB,E,4MAlBbxE,MAAQ,CACNsC,MAAO,M,uDAIP,OACE,4BAAQT,UAAU,YAAYU,SAAUlC,KAAKN,MAAM0E,gBACjD,4BAAQnC,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,e,GAbaW,aCyDNyB,E,kDAjDX,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJsE,YAAa,GAGE,EAKnBG,eAAiB,SAAAlE,GACb,EAAKD,SAAS,CAAEgE,YAAa/D,EAAEkC,OAAOH,QACtCqC,QAAQC,IAAIrE,EAAEkC,OAAOH,QALrB,EAAKmC,eAAiB,EAAKA,eAAeN,KAApB,gBAFP,E,yDAUN5D,GAAI,IAAD,OACZA,EAAEC,iBACF,IAAM4B,EAAK7B,EAAEsE,eAAevC,MACtBpC,EAAG,kEAA8DkC,GAQvEpB,MAAMd,EAPU,CACZS,OAAQ,SACRI,QAAS,CACL,eAAgB,sBAKnBE,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,gDAEpB,OAAOF,EAAIG,UAEdI,OAAM,SAAAC,GACH,EAAKpB,SAAS,CACVqB,MAAOD,EAAIE,e,+BAMvB,OACI,yBAAKC,UAAU,eACX,6CACA,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAWmB,SAAU3C,KAAKN,MAAMiD,WAChC,kBAAC,EAAD,CAAQyB,eAAgBpE,KAAKoE,kBAEjC,kBAAC,EAAD,CAAcL,UAAW/D,KAAKN,MAAMqE,UAAWE,YAAajE,KAAKL,MAAMsE,mB,GAhD7DrB,aC2EX6B,E,kDA1Eb,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoE,UAAW,CACX,CAAE,GAAM,KAAM,MAAS,SAAU,IAAO,oBAAqB,KAAQ,kBAAmB,OAAU,GAClG,CAAE,GAAM,KAAM,MAAS,UAAW,IAAO,2BAA4B,KAAQ,gBAAiB,OAAU,GACxG,CAAE,GAAM,KAAM,MAAS,WAAY,IAAO,4BAA6B,KAAQ,oBAAqB,OAAU,GAC9G,CAAE,GAAM,KAAM,MAAS,SAAU,IAAO,sBAAuB,KAAQ,kBAAmB,OAAU,GACpG,CAAE,GAAM,KAAM,MAAS,MAAO,IAAO,iCAAkC,KAAQ,gBAAiB,OAAU,IAC1GW,aAAa,GATE,E,gEAaE,IAAD,OAWlB/D,MAVY,0DAGI,CACdL,OAAQ,MACRI,QAAS,CACP,eAAgB,sBAKjBE,MAAK,SAAAC,GACJ,IAAIA,EAAIC,GACN,MAAM,IAAIC,MAAM,iDAElB,OAAOF,KAERD,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAChBJ,MAAK,SAAAK,GACJ,IAAI0D,EAAS,EAAKhF,MAAMoE,UAAUa,OAAO3D,GACzC,EAAKhB,SAAS,CACZ8D,UAAWY,EACXrD,MAAO,UAGVF,OAAM,SAAAC,GACL,EAAKpB,SAAS,CACZqB,MAAOD,EAAIE,e,qCAKJsD,GACb7E,KAAKC,SAAS,CACZyE,YAAaG,M,kCAILzE,GACVJ,KAAKC,SAAS,CACZ8D,UAAU,GAAD,mBAAM/D,KAAKL,MAAMoE,WAAjB,CAA4B3D,IACrCsE,aAAa,M,+BAIP,IAAD,OACDI,EAAO9E,KAAKL,MAAM+E,YAChB,kBAAC,EAAD,CACK/B,SAAU,SAAAkC,GAAI,OAAI,EAAKE,eAAeF,IACtC1D,UAAW,SAAAf,GAAQ,OAAI,EAAK4E,YAAY5E,MAC7C,kBAAC,EAAD,CAAa2D,UAAW/D,KAAKL,MAAMoE,UAAWpB,SAAU,SAAAkC,GAAI,OAAI,EAAKE,eAAeF,MAE5F,OACE,yBAAKrD,UAAU,OACXsD,O,GAtEQlC,aCOEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEd3E,OAAM,SAAAE,GACLgD,QAAQhD,MAAMA,EAAMC,a","file":"static/js/main.adade447.chunk.js","sourcesContent":["import React, { Component } from  'react';\r\nimport './index.css';\r\n\r\nclass AddBookmark extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      url: \"\",\r\n      desc: \"\",\r\n      rating: 1\r\n    };\r\n  }\r\n\r\n  titleChanged(title) {\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  urlChanged(url) {\r\n    this.setState({\r\n      url\r\n    });\r\n  }\r\n\r\n  descriptionChanged(desc) {\r\n    this.setState({\r\n      desc\r\n    });\r\n  }\r\n\r\n  ratingChanged(rating) {\r\n    this.setState({\r\n      rating\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const bookmark = (({title, url, desc, rating}) => ({title, url, desc, rating}))(this.state);\r\n    const url ='https://thinkful-list-api.herokuapp.com/rylan/bookmarks';\r\n    const options = {\r\n      method: 'POST',\r\n      body: JSON.stringify(bookmark),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    };\r\n\r\n    fetch(url, options)\r\n      .then(res => {\r\n        if(!res.ok) {\r\n          throw new Error('Something went wrong, please try again later');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          title: \"\",\r\n          url: \"\",\r\n          description: \"\",\r\n          rating: 1\r\n        });\r\n        this.props.handleAdd(bookmark);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const error = this.state.error \r\n          ? <div className=\"error\">{this.state.error}</div>\r\n          : \"\";\r\n\r\n    return (\r\n      <div className=\"addbookmark\">\r\n        <h2>Add Bookmark</h2>\r\n        { error }\r\n        <form className=\"addbookmark__form\" onSubmit={e => this.handleSubmit(e)}>\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\"\r\n            required=\"true\" \r\n            id=\"title\" \r\n            placeholder=\"Title\"\r\n            value={this.state.title}\r\n            onChange={e => this.titleChanged(e.target.value)}/>\r\n          <label htmlFor=\"url\">Url:</label>  \r\n          <input \r\n            type=\"url\" \r\n            name=\"url\" \r\n            id=\"url\" \r\n            placeholder=\"url\"\r\n            value={this.state.url}\r\n            onChange={e => this.urlChanged(e.target.value)}/>\r\n          <label htmlFor=\"description\">Description:</label>  \r\n          <textarea\r\n            required=\"true\" \r\n            name=\"description\" \r\n            id=\"description\" \r\n            placeholder=\"description\"\r\n            value={this.state.desc}\r\n            onChange={e => this.descriptionChanged(e.target.value)}/>\r\n          <label htmlFor=\"rating\">Rating: </label>\r\n          <input\r\n            required=\"true\" \r\n            type=\"number\" \r\n            name=\"rating\" \r\n            id=\"rating\" \r\n            min=\"1\"\r\n            max=\"5\"\r\n            value={this.state.rating}\r\n            onChange={e => this.ratingChanged(e.target.value)}/>\r\n\r\n          <div className=\"addbookmark__buttons\">\r\n            <button onClick={e => this.props.showForm(false)}>Cancel</button>\r\n            <button type=\"submit\" >Save</button>\r\n          </div>  \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBookmark;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nexport default function Rating(props) {\r\n  const stars = [0,0,0,0,0]\r\n    .map((_, i) => i < props.value\r\n      ? <span key={i}>&#9733;</span>\r\n      : <span key={i}>&#9734;</span>\r\n    );\r\n  return (\r\n    <div className=\"rating\">\r\n      {stars}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport Rating from './rating';\r\n\r\nexport default class Bookmark extends React.Component {\r\n\r\n    static defaultProps = {\r\n        sections: []\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bookmark\" >\r\n                <div className=\"bookmark__row\" onClick={() => this.props.handleSetActiveSection(this.props.index)}>\r\n                    <div className=\"bookmark__title\">\r\n                        <a\r\n                            href={this.props.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\">\r\n                            {this.props.title}\r\n                        </a>\r\n                    </div>\r\n                    <Rating value={this.props.rating} />\r\n                </div>\r\n                <div className=\"bookmark__description\">\r\n                    {(this.props.activeSectionIndex === this.props.index) && <p>{this.props.desc}</p>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Bookmark from './bookmark';\r\n\r\nexport default class BookmarkList extends Component {\r\n    state = {\r\n        activeSectionIndex: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSetActiveSection = this.handleSetActiveSection.bind(this)\r\n    }\r\n\r\n    handleSetActiveSection = (sectionIndex) => {\r\n        (this.state.activeSectionIndex === sectionIndex) ? this.setState({ activeSectionIndex: null }) : this.setState({ activeSectionIndex: sectionIndex });\r\n    }\r\n\r\n    render() {\r\n        const bookmarks = this\r\n            .props\r\n            .bookmarks\r\n            .filter(bookmark => bookmark.rating >= this.props.selectValue)\r\n            .map((bookmark, i) => <Bookmark {...bookmark} \r\n                                    index={i} \r\n                                    key={i} \r\n                                    handleSetActiveSection={this.handleSetActiveSection}\r\n                                    activeSectionIndex={this.state.activeSectionIndex}/>);\r\n        return (\r\n            <div className=\"bookmarkList\">\r\n                {bookmarks}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBookmarkList.defaultProps = {\r\n    bookmarks: []\r\n};\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass AddButton extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"add_button\" onClick={e => this.props.showForm(true)}>\r\n        &#43; New\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddButton;","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    value: null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <select className=\"dd_filter\" onChange={this.props.onSelectChange}>\r\n        <option value=\"0\">Filter By</option>\r\n        <option value=\"5\">5 stars</option>\r\n        <option value=\"4\">4 stars</option>          \r\n        <option value=\"3\">3 stars</option>                  \r\n        <option value=\"2\">2 stars</option>  \r\n        <option value=\"1\">1 star</option>\r\n      </select>\r\n    );\r\n  }\r\n} \r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport BookmarkList from './bookmarkList';\r\nimport AddButton from './addButton';\r\nimport Filter from './filter';\r\n\r\nclass BookmarkApp extends Component {\r\n    state = {\r\n        selectValue: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSelectChange = this.onSelectChange.bind(this);\r\n    }\r\n\r\n    onSelectChange = e => {\r\n        this.setState({ selectValue: e.target.value });\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        e.preventDefault();\r\n        const id = e.currrentTarget.value;\r\n        const url = `https://thinkful-list-api.herokuapp.com/rylan/bookmarks/${id}`;\r\n        const options = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n\r\n        fetch(url, options)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error('Something went wrong, please try again later');\r\n                }\r\n                return res.json();\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    error: err.message\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bookmarkApp\">\r\n                <h2>My Bookmarks:</h2>\r\n                <div className=\"controls\">\r\n                    <AddButton showForm={this.props.showForm} />\r\n                    <Filter onSelectChange={this.onSelectChange} />\r\n                </div>\r\n                <BookmarkList bookmarks={this.props.bookmarks} selectValue={this.state.selectValue}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookmarkApp;","import React, { Component } from 'react';\nimport './App.css';\nimport AddBookmark from './addBookmark';\nimport BookmarkApp from './bookmarkApp';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookmarks: [\n      { 'id': 'a1', 'title': 'Google', 'url': 'http://google.com', 'desc': 'a search engine', 'rating': 1 },\n      { 'id': 'b2', 'title': 'Nexflix', 'url': 'https://www.netflix.com/', 'desc': 'movie website', 'rating': 2 },\n      { 'id': 'c3', 'title': 'Facebook', 'url': 'https://www.facebook.com/', 'desc': 'social networking', 'rating': 3 },\n      { 'id': 'd4', 'title': 'Github', 'url': 'https://github.com/', 'desc': 'code repository', 'rating': 4 },\n      { 'id': 'e5', 'title': 'MDN', 'url': 'https://developer.mozilla.org/', 'desc': 'web tech docs', 'rating': 5 }],\n      showAddForm: false\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://thinkful-list-api.herokuapp.com/rylan/bookmarks';\n    //First populate list with defaults:\n\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later.');\n        }\n        return res;\n      })\n      .then(res => res.json())\n      .then(data => {\n        let joined = this.state.bookmarks.concat(data);\n        this.setState({\n          bookmarks: joined,\n          error: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  setShowAddForm(show) {\n    this.setState({\n      showAddForm: show\n    });\n  }\n\n  addBookmark(bookmark) {\n    this.setState({\n      bookmarks: [...this.state.bookmarks, bookmark],\n      showAddForm: false\n    });\n  }\n\n  render() {\n    const page = this.state.showAddForm\n          ? <AddBookmark \n                 showForm={show => this.setShowAddForm(show)} \n                 handleAdd={bookmark => this.addBookmark(bookmark)}/>\n          : <BookmarkApp bookmarks={this.state.bookmarks} showForm={show => this.setShowAddForm(show)}/>; \n\n    return (\n      <div className=\"App\">\n        { page }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}